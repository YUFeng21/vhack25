import { z } from "zod";
export declare const ModelInfoRequestSchema: z.ZodObject<{
    model: z.ZodOptional<z.ZodString>;
    capabilities: z.ZodOptional<z.ZodNullable<z.ZodEnum<["completion", "chat", "image", "embed", "rerank"]>>>;
}, "strip", z.ZodTypeAny, {
    model?: string | undefined;
    capabilities?: "rerank" | "chat" | "completion" | "image" | "embed" | null | undefined;
}, {
    model?: string | undefined;
    capabilities?: "rerank" | "chat" | "completion" | "image" | "embed" | null | undefined;
}>;
export declare const ModelInfoSchema: z.ZodObject<{
    id: z.ZodDefault<z.ZodString>;
    object: z.ZodString;
    name: z.ZodString;
    context_length: z.ZodDefault<z.ZodNumber>;
    languages: z.ZodArray<z.ZodString, "many">;
    capabilities: z.ZodDefault<z.ZodArray<z.ZodEnum<["completion", "chat", "image", "embed", "rerank"]>, "many">>;
    created: z.ZodNumber;
    owned_by: z.ZodString;
}, "strip", z.ZodTypeAny, {
    object: string;
    id: string;
    name: string;
    created: number;
    capabilities: ("rerank" | "chat" | "completion" | "image" | "embed")[];
    context_length: number;
    languages: string[];
    owned_by: string;
}, {
    object: string;
    name: string;
    created: number;
    languages: string[];
    owned_by: string;
    id?: string | undefined;
    context_length?: number | undefined;
    capabilities?: ("rerank" | "chat" | "completion" | "image" | "embed")[] | undefined;
}>;
export declare const ModelInfoResponseSchema: z.ZodObject<{
    object: z.ZodEnum<["chat.model_info"]>;
    data: z.ZodArray<z.ZodObject<{
        id: z.ZodDefault<z.ZodString>;
        object: z.ZodString;
        name: z.ZodString;
        context_length: z.ZodDefault<z.ZodNumber>;
        languages: z.ZodArray<z.ZodString, "many">;
        capabilities: z.ZodDefault<z.ZodArray<z.ZodEnum<["completion", "chat", "image", "embed", "rerank"]>, "many">>;
        created: z.ZodNumber;
        owned_by: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        object: string;
        id: string;
        name: string;
        created: number;
        capabilities: ("rerank" | "chat" | "completion" | "image" | "embed")[];
        context_length: number;
        languages: string[];
        owned_by: string;
    }, {
        object: string;
        name: string;
        created: number;
        languages: string[];
        owned_by: string;
        id?: string | undefined;
        context_length?: number | undefined;
        capabilities?: ("rerank" | "chat" | "completion" | "image" | "embed")[] | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    object: "chat.model_info";
    data: {
        object: string;
        id: string;
        name: string;
        created: number;
        capabilities: ("rerank" | "chat" | "completion" | "image" | "embed")[];
        context_length: number;
        languages: string[];
        owned_by: string;
    }[];
}, {
    object: "chat.model_info";
    data: {
        object: string;
        name: string;
        created: number;
        languages: string[];
        owned_by: string;
        id?: string | undefined;
        context_length?: number | undefined;
        capabilities?: ("rerank" | "chat" | "completion" | "image" | "embed")[] | undefined;
    }[];
}>;
export declare const ModelNamesRequestSchema: z.ZodObject<{
    prefer: z.ZodOptional<z.ZodString>;
    capabilities: z.ZodOptional<z.ZodNullable<z.ZodEnum<["completion", "chat", "image", "embed", "rerank"]>>>;
}, "strip", z.ZodTypeAny, {
    prefer?: string | undefined;
    capabilities?: "rerank" | "chat" | "completion" | "image" | "embed" | null | undefined;
}, {
    prefer?: string | undefined;
    capabilities?: "rerank" | "chat" | "completion" | "image" | "embed" | null | undefined;
}>;
export declare const ModelNamesResponseSchema: z.ZodArray<z.ZodString, "many">;
export type ModelInfoRequest = z.infer<typeof ModelInfoRequestSchema>;
export type ModelInfo = z.infer<typeof ModelInfoSchema>;
export type ModelInfoResponse = z.infer<typeof ModelInfoResponseSchema>;
export type ModelNamesRequest = z.infer<typeof ModelNamesRequestSchema>;
export type ModelNamesResponse = z.infer<typeof ModelNamesResponseSchema>;
