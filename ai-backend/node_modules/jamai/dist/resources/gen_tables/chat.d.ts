import { z } from "zod";
export declare const GetConversationThreadRequestSchema: z.ZodObject<{
    table_id: z.ZodString;
}, "strip", z.ZodTypeAny, {
    table_id: string;
}, {
    table_id: string;
}>;
export declare const GetConversationThreadResponseSchema: z.ZodObject<{
    object: z.ZodEnum<["chat.thread"]>;
    thread: z.ZodDefault<z.ZodArray<z.ZodObject<{
        role: z.ZodEnum<["system", "user", "assistant", "function"]>;
        content: z.ZodString;
        name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        role: "function" | "system" | "user" | "assistant";
        content: string;
        name?: string | null | undefined;
    }, {
        role: "function" | "system" | "user" | "assistant";
        content: string;
        name?: string | null | undefined;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    object: "chat.thread";
    thread: {
        role: "function" | "system" | "user" | "assistant";
        content: string;
        name?: string | null | undefined;
    }[];
}, {
    object: "chat.thread";
    thread?: {
        role: "function" | "system" | "user" | "assistant";
        content: string;
        name?: string | null | undefined;
    }[] | undefined;
}>;
export declare const GenTableChatCompletionChunksSchema: z.ZodObject<{
    object: z.ZodEnum<["gen_table.completion.chunks"]>;
    columns: z.ZodRecord<z.ZodString, z.ZodObject<{
        id: z.ZodString;
        object: z.ZodEnum<["chat.completion", "chat.completion.chunk"]>;
        created: z.ZodNumber;
        model: z.ZodString;
        usage: z.ZodOptional<z.ZodObject<{
            prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            completions_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            total_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        }, "strip", z.ZodTypeAny, {
            prompt_tokens?: number | null | undefined;
            completions_tokens?: number | null | undefined;
            total_tokens?: number | null | undefined;
        }, {
            prompt_tokens?: number | null | undefined;
            completions_tokens?: number | null | undefined;
            total_tokens?: number | null | undefined;
        }>>;
        choices: z.ZodUnion<[z.ZodArray<z.ZodObject<{
            message: z.ZodObject<{
                role: z.ZodEnum<["system", "user", "assistant", "function"]>;
                content: z.ZodString;
                name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            }, "strip", z.ZodTypeAny, {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            }, {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            }>;
            index: z.ZodNumber;
            finish_reason: z.ZodNullable<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
        }, {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
        }>, "many">, z.ZodArray<z.ZodObject<{
            message: z.ZodObject<{
                role: z.ZodEnum<["system", "user", "assistant", "function"]>;
                content: z.ZodString;
                name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            }, "strip", z.ZodTypeAny, {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            }, {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            }>;
            index: z.ZodNumber;
            finish_reason: z.ZodNullable<z.ZodString>;
            delta: z.ZodNullable<z.ZodObject<{
                role: z.ZodEnum<["system", "user", "assistant", "function"]>;
                content: z.ZodString;
                name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            }, "strip", z.ZodTypeAny, {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            }, {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
            delta: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            } | null;
        }, {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
            delta: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            } | null;
        }>, "many">]>;
        references: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            object: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            object: string;
        }, {
            object: string;
        }>>>;
    }, "strip", z.ZodTypeAny, {
        object: "chat.completion" | "chat.completion.chunk";
        id: string;
        model: string;
        created: number;
        choices: ({
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
        }[] | {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
            delta: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            } | null;
        }[]) & ({
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
        }[] | {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
            delta: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            } | null;
        }[] | undefined);
        usage?: {
            prompt_tokens?: number | null | undefined;
            completions_tokens?: number | null | undefined;
            total_tokens?: number | null | undefined;
        } | undefined;
        references?: {
            object: string;
        } | null | undefined;
    }, {
        object: "chat.completion" | "chat.completion.chunk";
        id: string;
        model: string;
        created: number;
        choices: ({
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
        }[] | {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
            delta: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            } | null;
        }[]) & ({
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
        }[] | {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
            delta: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            } | null;
        }[] | undefined);
        usage?: {
            prompt_tokens?: number | null | undefined;
            completions_tokens?: number | null | undefined;
            total_tokens?: number | null | undefined;
        } | undefined;
        references?: {
            object: string;
        } | null | undefined;
    }>>;
    row_id: z.ZodString;
}, "strip", z.ZodTypeAny, {
    object: "gen_table.completion.chunks";
    columns: Record<string, {
        object: "chat.completion" | "chat.completion.chunk";
        id: string;
        model: string;
        created: number;
        choices: ({
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
        }[] | {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
            delta: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            } | null;
        }[]) & ({
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
        }[] | {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
            delta: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            } | null;
        }[] | undefined);
        usage?: {
            prompt_tokens?: number | null | undefined;
            completions_tokens?: number | null | undefined;
            total_tokens?: number | null | undefined;
        } | undefined;
        references?: {
            object: string;
        } | null | undefined;
    }>;
    row_id: string;
}, {
    object: "gen_table.completion.chunks";
    columns: Record<string, {
        object: "chat.completion" | "chat.completion.chunk";
        id: string;
        model: string;
        created: number;
        choices: ({
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
        }[] | {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
            delta: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            } | null;
        }[]) & ({
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
        }[] | {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
            delta: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            } | null;
        }[] | undefined);
        usage?: {
            prompt_tokens?: number | null | undefined;
            completions_tokens?: number | null | undefined;
            total_tokens?: number | null | undefined;
        } | undefined;
        references?: {
            object: string;
        } | null | undefined;
    }>;
    row_id: string;
}>;
export declare const GenTableStreamChatCompletionChunkSchema: z.ZodObject<{
    object: z.ZodEnum<["chat.completion", "chat.completion.chunk"]>;
    id: z.ZodString;
    model: z.ZodString;
    created: z.ZodNumber;
    usage: z.ZodOptional<z.ZodObject<{
        prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        completions_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        total_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    }, "strip", z.ZodTypeAny, {
        prompt_tokens?: number | null | undefined;
        completions_tokens?: number | null | undefined;
        total_tokens?: number | null | undefined;
    }, {
        prompt_tokens?: number | null | undefined;
        completions_tokens?: number | null | undefined;
        total_tokens?: number | null | undefined;
    }>>;
    choices: z.ZodUnion<[z.ZodArray<z.ZodObject<{
        message: z.ZodObject<{
            role: z.ZodEnum<["system", "user", "assistant", "function"]>;
            content: z.ZodString;
            name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        }, {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        }>;
        index: z.ZodNumber;
        finish_reason: z.ZodNullable<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
    }, {
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
    }>, "many">, z.ZodArray<z.ZodObject<{
        message: z.ZodObject<{
            role: z.ZodEnum<["system", "user", "assistant", "function"]>;
            content: z.ZodString;
            name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        }, {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        }>;
        index: z.ZodNumber;
        finish_reason: z.ZodNullable<z.ZodString>;
        delta: z.ZodNullable<z.ZodObject<{
            role: z.ZodEnum<["system", "user", "assistant", "function"]>;
            content: z.ZodString;
            name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        }, {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
        delta: {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        } | null;
    }, {
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
        delta: {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        } | null;
    }>, "many">]>;
    references: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        object: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        object: string;
    }, {
        object: string;
    }>>>;
    output_column_name: z.ZodString;
    row_id: z.ZodString;
}, "strip", z.ZodTypeAny, {
    object: "chat.completion" | "chat.completion.chunk";
    id: string;
    model: string;
    created: number;
    choices: ({
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
    }[] | {
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
        delta: {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        } | null;
    }[]) & ({
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
    }[] | {
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
        delta: {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        } | null;
    }[] | undefined);
    row_id: string;
    output_column_name: string;
    usage?: {
        prompt_tokens?: number | null | undefined;
        completions_tokens?: number | null | undefined;
        total_tokens?: number | null | undefined;
    } | undefined;
    references?: {
        object: string;
    } | null | undefined;
}, {
    object: "chat.completion" | "chat.completion.chunk";
    id: string;
    model: string;
    created: number;
    choices: ({
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
    }[] | {
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
        delta: {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        } | null;
    }[]) & ({
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
    }[] | {
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
        delta: {
            role: "function" | "system" | "user" | "assistant";
            content: string;
            name?: string | null | undefined;
        } | null;
    }[] | undefined);
    row_id: string;
    output_column_name: string;
    usage?: {
        prompt_tokens?: number | null | undefined;
        completions_tokens?: number | null | undefined;
        total_tokens?: number | null | undefined;
    } | undefined;
    references?: {
        object: string;
    } | null | undefined;
}>;
export declare const GenTableStreamReferencesSchema: z.ZodObject<{
    object: z.ZodEnum<["gen_table.reference"]>;
    output_column_name: z.ZodString;
}, "strip", z.ZodTypeAny, {
    object: "gen_table.reference";
    output_column_name: string;
}, {
    object: "gen_table.reference";
    output_column_name: string;
}>;
export declare const CreateChatTableRequestSchema: z.ZodObject<{
    id: z.ZodString;
    cols: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        dtype: z.ZodOptional<z.ZodDefault<z.ZodEnum<["int", "int8", "float", "float64", "float32", "float16", "bool", "str", "date-time", "file", "bytes"]>>>;
        vlen: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
        index: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
        gen_config: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            id: z.ZodOptional<z.ZodOptional<z.ZodString>>;
            model: z.ZodOptional<z.ZodOptional<z.ZodString>>;
            messages: z.ZodOptional<z.ZodArray<z.ZodObject<{
                role: z.ZodEnum<["system", "user", "assistant", "function"]>;
                content: z.ZodString;
                name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            }, "strip", z.ZodTypeAny, {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            }, {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            }>, "many">>;
            rag_params: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodObject<{
                search_query: z.ZodOptional<z.ZodString>;
                k: z.ZodOptional<z.ZodNumber>;
                fetch_k: z.ZodOptional<z.ZodNumber>;
                document_ids: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                rank_profile: z.ZodOptional<z.ZodEnum<["bm25", "semantic", "hybrid", "hybrid_log"]>>;
                rerank: z.ZodOptional<z.ZodBoolean>;
                concat_reranker_input: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            }, {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            }>>>>;
            tools: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                type: z.ZodOptional<z.ZodString>;
                function: z.ZodObject<{
                    name: z.ZodString;
                    description: z.ZodOptional<z.ZodString>;
                    parameters: z.ZodRecord<z.ZodString, z.ZodAny>;
                }, "strip", z.ZodTypeAny, {
                    name: string;
                    parameters: Record<string, any>;
                    description?: string | undefined;
                }, {
                    name: string;
                    parameters: Record<string, any>;
                    description?: string | undefined;
                }>;
            }, "strip", z.ZodTypeAny, {
                function: {
                    name: string;
                    parameters: Record<string, any>;
                    description?: string | undefined;
                };
                type?: string | undefined;
            }, {
                function: {
                    name: string;
                    parameters: Record<string, any>;
                    description?: string | undefined;
                };
                type?: string | undefined;
            }>, "many">>>>;
            tool_choice: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodUnion<[z.ZodString, z.ZodObject<{
                type: z.ZodOptional<z.ZodString>;
                function: z.ZodObject<{
                    name: z.ZodString;
                    description: z.ZodOptional<z.ZodString>;
                    parameters: z.ZodRecord<z.ZodString, z.ZodAny>;
                }, "strip", z.ZodTypeAny, {
                    name: string;
                    parameters: Record<string, any>;
                    description?: string | undefined;
                }, {
                    name: string;
                    parameters: Record<string, any>;
                    description?: string | undefined;
                }>;
            }, "strip", z.ZodTypeAny, {
                function: {
                    name: string;
                    parameters: Record<string, any>;
                    description?: string | undefined;
                };
                type?: string | undefined;
            }, {
                function: {
                    name: string;
                    parameters: Record<string, any>;
                    description?: string | undefined;
                };
                type?: string | undefined;
            }>]>>>>;
            temperature: z.ZodOptional<z.ZodOptional<z.ZodDefault<z.ZodOptional<z.ZodNumber>>>>;
            top_p: z.ZodOptional<z.ZodOptional<z.ZodDefault<z.ZodOptional<z.ZodNumber>>>>;
            n: z.ZodOptional<z.ZodOptional<z.ZodDefault<z.ZodOptional<z.ZodNumber>>>>;
            stop: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
            max_tokens: z.ZodOptional<z.ZodOptional<z.ZodDefault<z.ZodNumber>>>;
            presence_penalty: z.ZodOptional<z.ZodOptional<z.ZodDefault<z.ZodOptional<z.ZodNumber>>>>;
            frequency_penalty: z.ZodOptional<z.ZodOptional<z.ZodDefault<z.ZodOptional<z.ZodNumber>>>>;
            logit_bias: z.ZodOptional<z.ZodOptional<z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodAny>>>>;
            user: z.ZodOptional<z.ZodOptional<z.ZodDefault<z.ZodString>>>;
        }, "strip", z.ZodTypeAny, {
            id?: string | undefined;
            model?: string | undefined;
            messages?: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            }[] | undefined;
            rag_params?: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null | undefined;
            tools?: {
                function: {
                    name: string;
                    parameters: Record<string, any>;
                    description?: string | undefined;
                };
                type?: string | undefined;
            }[] | null | undefined;
            tool_choice?: string | {
                function: {
                    name: string;
                    parameters: Record<string, any>;
                    description?: string | undefined;
                };
                type?: string | undefined;
            } | null | undefined;
            temperature?: number | undefined;
            top_p?: number | undefined;
            n?: number | undefined;
            stop?: string[] | undefined;
            max_tokens?: number | undefined;
            presence_penalty?: number | undefined;
            frequency_penalty?: number | undefined;
            logit_bias?: Record<string, any> | undefined;
            user?: string | undefined;
        }, {
            id?: string | undefined;
            model?: string | undefined;
            messages?: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            }[] | undefined;
            rag_params?: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null | undefined;
            tools?: {
                function: {
                    name: string;
                    parameters: Record<string, any>;
                    description?: string | undefined;
                };
                type?: string | undefined;
            }[] | null | undefined;
            tool_choice?: string | {
                function: {
                    name: string;
                    parameters: Record<string, any>;
                    description?: string | undefined;
                };
                type?: string | undefined;
            } | null | undefined;
            temperature?: number | undefined;
            top_p?: number | undefined;
            n?: number | undefined;
            stop?: string[] | undefined;
            max_tokens?: number | undefined;
            presence_penalty?: number | undefined;
            frequency_penalty?: number | undefined;
            logit_bias?: Record<string, any> | undefined;
            user?: string | undefined;
        }>, z.ZodNull]>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        dtype?: "float" | "int" | "int8" | "float64" | "float32" | "float16" | "bool" | "str" | "date-time" | "file" | "bytes" | undefined;
        vlen?: number | undefined;
        index?: boolean | undefined;
        gen_config?: {
            id?: string | undefined;
            model?: string | undefined;
            messages?: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            }[] | undefined;
            rag_params?: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null | undefined;
            tools?: {
                function: {
                    name: string;
                    parameters: Record<string, any>;
                    description?: string | undefined;
                };
                type?: string | undefined;
            }[] | null | undefined;
            tool_choice?: string | {
                function: {
                    name: string;
                    parameters: Record<string, any>;
                    description?: string | undefined;
                };
                type?: string | undefined;
            } | null | undefined;
            temperature?: number | undefined;
            top_p?: number | undefined;
            n?: number | undefined;
            stop?: string[] | undefined;
            max_tokens?: number | undefined;
            presence_penalty?: number | undefined;
            frequency_penalty?: number | undefined;
            logit_bias?: Record<string, any> | undefined;
            user?: string | undefined;
        } | null | undefined;
    }, {
        id: string;
        dtype?: "float" | "int" | "int8" | "float64" | "float32" | "float16" | "bool" | "str" | "date-time" | "file" | "bytes" | undefined;
        vlen?: number | undefined;
        index?: boolean | undefined;
        gen_config?: {
            id?: string | undefined;
            model?: string | undefined;
            messages?: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            }[] | undefined;
            rag_params?: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null | undefined;
            tools?: {
                function: {
                    name: string;
                    parameters: Record<string, any>;
                    description?: string | undefined;
                };
                type?: string | undefined;
            }[] | null | undefined;
            tool_choice?: string | {
                function: {
                    name: string;
                    parameters: Record<string, any>;
                    description?: string | undefined;
                };
                type?: string | undefined;
            } | null | undefined;
            temperature?: number | undefined;
            top_p?: number | undefined;
            n?: number | undefined;
            stop?: string[] | undefined;
            max_tokens?: number | undefined;
            presence_penalty?: number | undefined;
            frequency_penalty?: number | undefined;
            logit_bias?: Record<string, any> | undefined;
            user?: string | undefined;
        } | null | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    id: string;
    cols: {
        id: string;
        dtype?: "float" | "int" | "int8" | "float64" | "float32" | "float16" | "bool" | "str" | "date-time" | "file" | "bytes" | undefined;
        vlen?: number | undefined;
        index?: boolean | undefined;
        gen_config?: {
            id?: string | undefined;
            model?: string | undefined;
            messages?: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            }[] | undefined;
            rag_params?: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null | undefined;
            tools?: {
                function: {
                    name: string;
                    parameters: Record<string, any>;
                    description?: string | undefined;
                };
                type?: string | undefined;
            }[] | null | undefined;
            tool_choice?: string | {
                function: {
                    name: string;
                    parameters: Record<string, any>;
                    description?: string | undefined;
                };
                type?: string | undefined;
            } | null | undefined;
            temperature?: number | undefined;
            top_p?: number | undefined;
            n?: number | undefined;
            stop?: string[] | undefined;
            max_tokens?: number | undefined;
            presence_penalty?: number | undefined;
            frequency_penalty?: number | undefined;
            logit_bias?: Record<string, any> | undefined;
            user?: string | undefined;
        } | null | undefined;
    }[];
}, {
    id: string;
    cols: {
        id: string;
        dtype?: "float" | "int" | "int8" | "float64" | "float32" | "float16" | "bool" | "str" | "date-time" | "file" | "bytes" | undefined;
        vlen?: number | undefined;
        index?: boolean | undefined;
        gen_config?: {
            id?: string | undefined;
            model?: string | undefined;
            messages?: {
                role: "function" | "system" | "user" | "assistant";
                content: string;
                name?: string | null | undefined;
            }[] | undefined;
            rag_params?: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null | undefined;
            tools?: {
                function: {
                    name: string;
                    parameters: Record<string, any>;
                    description?: string | undefined;
                };
                type?: string | undefined;
            }[] | null | undefined;
            tool_choice?: string | {
                function: {
                    name: string;
                    parameters: Record<string, any>;
                    description?: string | undefined;
                };
                type?: string | undefined;
            } | null | undefined;
            temperature?: number | undefined;
            top_p?: number | undefined;
            n?: number | undefined;
            stop?: string[] | undefined;
            max_tokens?: number | undefined;
            presence_penalty?: number | undefined;
            frequency_penalty?: number | undefined;
            logit_bias?: Record<string, any> | undefined;
            user?: string | undefined;
        } | null | undefined;
    }[];
}>;
export type CreateChatTableRequest = z.infer<typeof CreateChatTableRequestSchema>;
export type GetConversationThreadRequest = z.infer<typeof GetConversationThreadRequestSchema>;
export type GetConversationThreadResponse = z.infer<typeof GetConversationThreadResponseSchema>;
export type GenTableChatCompletionChunks = z.infer<typeof GenTableChatCompletionChunksSchema>;
export type GenTableStreamChatCompletionChunk = z.infer<typeof GenTableStreamChatCompletionChunkSchema>;
export type GenTableStreamReferences = z.infer<typeof GenTableStreamReferencesSchema>;
