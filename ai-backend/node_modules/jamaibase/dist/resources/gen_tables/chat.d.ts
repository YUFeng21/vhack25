import { z } from "zod";
export declare const GetConversationThreadRequestSchema: z.ZodObject<{
    table_id: z.ZodString;
    column_id: z.ZodString;
    row_id: z.ZodDefault<z.ZodString>;
    table_type: z.ZodEnum<["action", "knowledge", "chat"]>;
    include: z.ZodDefault<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    table_type: "action" | "knowledge" | "chat";
    table_id: string;
    row_id: string;
    column_id: string;
    include: boolean;
}, {
    table_type: "action" | "knowledge" | "chat";
    table_id: string;
    column_id: string;
    row_id?: string | undefined;
    include?: boolean | undefined;
}>;
export declare const GetConversationThreadResponseSchema: z.ZodObject<{
    object: z.ZodEnum<["chat.thread"]>;
    thread: z.ZodDefault<z.ZodArray<z.ZodObject<{
        role: z.ZodEnum<["system", "user", "assistant", "function"]>;
        content: z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodRecord<z.ZodString, z.ZodString>]>>, "many">]>;
        name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        role: "function" | "system" | "user" | "assistant";
        content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
        name?: string | null | undefined;
    }, {
        role: "function" | "system" | "user" | "assistant";
        content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
        name?: string | null | undefined;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    object: "chat.thread";
    thread: {
        role: "function" | "system" | "user" | "assistant";
        content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
        name?: string | null | undefined;
    }[];
}, {
    object: "chat.thread";
    thread?: {
        role: "function" | "system" | "user" | "assistant";
        content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
        name?: string | null | undefined;
    }[] | undefined;
}>;
export declare const GenTableChatCompletionChunksSchema: z.ZodObject<{
    object: z.ZodEnum<["gen_table.completion.chunks"]>;
    columns: z.ZodRecord<z.ZodString, z.ZodObject<{
        id: z.ZodString;
        object: z.ZodEnum<["chat.completion"]>;
        created: z.ZodNumber;
        model: z.ZodString;
        usage: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            prompt_tokens: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodNumber>>>;
            completion_tokens: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodNumber>>>;
            total_tokens: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodNumber>>>;
        }, "strip", z.ZodTypeAny, {
            prompt_tokens: number | null;
            completion_tokens: number | null;
            total_tokens: number | null;
        }, {
            prompt_tokens?: number | null | undefined;
            completion_tokens?: number | null | undefined;
            total_tokens?: number | null | undefined;
        }>>>;
        choices: z.ZodUnion<[z.ZodArray<z.ZodObject<{
            message: z.ZodObject<{
                role: z.ZodEnum<["system", "user", "assistant", "function"]>;
                content: z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodRecord<z.ZodString, z.ZodString>]>>, "many">]>;
                name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            }, "strip", z.ZodTypeAny, {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            }, {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            }>;
            index: z.ZodNumber;
            finish_reason: z.ZodNullable<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
        }, {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
        }>, "many">, z.ZodArray<z.ZodObject<{
            message: z.ZodObject<{
                role: z.ZodEnum<["system", "user", "assistant", "function"]>;
                content: z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodRecord<z.ZodString, z.ZodString>]>>, "many">]>;
                name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            }, "strip", z.ZodTypeAny, {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            }, {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            }>;
            index: z.ZodNumber;
            finish_reason: z.ZodNullable<z.ZodString>;
            delta: z.ZodNullable<z.ZodObject<{
                role: z.ZodEnum<["system", "user", "assistant", "function"]>;
                content: z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodRecord<z.ZodString, z.ZodString>]>>, "many">]>;
                name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            }, "strip", z.ZodTypeAny, {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            }, {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
            delta: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            } | null;
        }, {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
            delta: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            } | null;
        }>, "many">]>;
        references: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            object: z.ZodEnum<["chat.references"]>;
            chunks: z.ZodArray<z.ZodObject<{
                text: z.ZodString;
                title: z.ZodString;
                page: z.ZodNumber;
                file_name: z.ZodString;
                file_path: z.ZodString;
                document_id: z.ZodString;
                chunk_id: z.ZodString;
                metadata: z.ZodRecord<z.ZodString, z.ZodAny>;
            }, "strip", z.ZodTypeAny, {
                file_path: string;
                text: string;
                title: string;
                page: number;
                file_name: string;
                document_id: string;
                chunk_id: string;
                metadata: Record<string, any>;
            }, {
                file_path: string;
                text: string;
                title: string;
                page: number;
                file_name: string;
                document_id: string;
                chunk_id: string;
                metadata: Record<string, any>;
            }>, "many">;
            search_query: z.ZodString;
            finish_reason: z.ZodNullable<z.ZodEnum<["stop", "context_overflow"]>>;
        }, "strip", z.ZodTypeAny, {
            object: "chat.references";
            search_query: string;
            finish_reason: "stop" | "context_overflow" | null;
            chunks: {
                file_path: string;
                text: string;
                title: string;
                page: number;
                file_name: string;
                document_id: string;
                chunk_id: string;
                metadata: Record<string, any>;
            }[];
        }, {
            object: "chat.references";
            search_query: string;
            finish_reason: "stop" | "context_overflow" | null;
            chunks: {
                file_path: string;
                text: string;
                title: string;
                page: number;
                file_name: string;
                document_id: string;
                chunk_id: string;
                metadata: Record<string, any>;
            }[];
        }>>>;
    }, "strip", z.ZodTypeAny, {
        object: "chat.completion";
        id: string;
        model: string;
        created: number;
        choices: ({
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
        }[] | {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
            delta: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            } | null;
        }[]) & ({
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
        }[] | {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
            delta: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            } | null;
        }[] | undefined);
        usage?: {
            prompt_tokens: number | null;
            completion_tokens: number | null;
            total_tokens: number | null;
        } | null | undefined;
        references?: {
            object: "chat.references";
            search_query: string;
            finish_reason: "stop" | "context_overflow" | null;
            chunks: {
                file_path: string;
                text: string;
                title: string;
                page: number;
                file_name: string;
                document_id: string;
                chunk_id: string;
                metadata: Record<string, any>;
            }[];
        } | null | undefined;
    }, {
        object: "chat.completion";
        id: string;
        model: string;
        created: number;
        choices: ({
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
        }[] | {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
            delta: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            } | null;
        }[]) & ({
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
        }[] | {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
            delta: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            } | null;
        }[] | undefined);
        usage?: {
            prompt_tokens?: number | null | undefined;
            completion_tokens?: number | null | undefined;
            total_tokens?: number | null | undefined;
        } | null | undefined;
        references?: {
            object: "chat.references";
            search_query: string;
            finish_reason: "stop" | "context_overflow" | null;
            chunks: {
                file_path: string;
                text: string;
                title: string;
                page: number;
                file_name: string;
                document_id: string;
                chunk_id: string;
                metadata: Record<string, any>;
            }[];
        } | null | undefined;
    }>>;
    row_id: z.ZodString;
}, "strip", z.ZodTypeAny, {
    object: "gen_table.completion.chunks";
    columns: Record<string, {
        object: "chat.completion";
        id: string;
        model: string;
        created: number;
        choices: ({
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
        }[] | {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
            delta: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            } | null;
        }[]) & ({
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
        }[] | {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
            delta: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            } | null;
        }[] | undefined);
        usage?: {
            prompt_tokens: number | null;
            completion_tokens: number | null;
            total_tokens: number | null;
        } | null | undefined;
        references?: {
            object: "chat.references";
            search_query: string;
            finish_reason: "stop" | "context_overflow" | null;
            chunks: {
                file_path: string;
                text: string;
                title: string;
                page: number;
                file_name: string;
                document_id: string;
                chunk_id: string;
                metadata: Record<string, any>;
            }[];
        } | null | undefined;
    }>;
    row_id: string;
}, {
    object: "gen_table.completion.chunks";
    columns: Record<string, {
        object: "chat.completion";
        id: string;
        model: string;
        created: number;
        choices: ({
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
        }[] | {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
            delta: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            } | null;
        }[]) & ({
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
        }[] | {
            message: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            };
            index: number;
            finish_reason: string | null;
            delta: {
                role: "function" | "system" | "user" | "assistant";
                content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                name?: string | null | undefined;
            } | null;
        }[] | undefined);
        usage?: {
            prompt_tokens?: number | null | undefined;
            completion_tokens?: number | null | undefined;
            total_tokens?: number | null | undefined;
        } | null | undefined;
        references?: {
            object: "chat.references";
            search_query: string;
            finish_reason: "stop" | "context_overflow" | null;
            chunks: {
                file_path: string;
                text: string;
                title: string;
                page: number;
                file_name: string;
                document_id: string;
                chunk_id: string;
                metadata: Record<string, any>;
            }[];
        } | null | undefined;
    }>;
    row_id: string;
}>;
export declare const GenTableRowsChatCompletionChunksSchema: z.ZodObject<{
    object: z.ZodEnum<["gen_table.completion.rows"]>;
    rows: z.ZodArray<z.ZodObject<{
        object: z.ZodEnum<["gen_table.completion.chunks"]>;
        columns: z.ZodRecord<z.ZodString, z.ZodObject<{
            id: z.ZodString;
            object: z.ZodEnum<["chat.completion"]>;
            created: z.ZodNumber;
            model: z.ZodString;
            usage: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                prompt_tokens: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodNumber>>>;
                completion_tokens: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodNumber>>>;
                total_tokens: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodNumber>>>;
            }, "strip", z.ZodTypeAny, {
                prompt_tokens: number | null;
                completion_tokens: number | null;
                total_tokens: number | null;
            }, {
                prompt_tokens?: number | null | undefined;
                completion_tokens?: number | null | undefined;
                total_tokens?: number | null | undefined;
            }>>>;
            choices: z.ZodUnion<[z.ZodArray<z.ZodObject<{
                message: z.ZodObject<{
                    role: z.ZodEnum<["system", "user", "assistant", "function"]>;
                    content: z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodRecord<z.ZodString, z.ZodString>]>>, "many">]>;
                    name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
                }, "strip", z.ZodTypeAny, {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                }, {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                }>;
                index: z.ZodNumber;
                finish_reason: z.ZodNullable<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
            }, {
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
            }>, "many">, z.ZodArray<z.ZodObject<{
                message: z.ZodObject<{
                    role: z.ZodEnum<["system", "user", "assistant", "function"]>;
                    content: z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodRecord<z.ZodString, z.ZodString>]>>, "many">]>;
                    name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
                }, "strip", z.ZodTypeAny, {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                }, {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                }>;
                index: z.ZodNumber;
                finish_reason: z.ZodNullable<z.ZodString>;
                delta: z.ZodNullable<z.ZodObject<{
                    role: z.ZodEnum<["system", "user", "assistant", "function"]>;
                    content: z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodRecord<z.ZodString, z.ZodString>]>>, "many">]>;
                    name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
                }, "strip", z.ZodTypeAny, {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                }, {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                }>>;
            }, "strip", z.ZodTypeAny, {
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
                delta: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                } | null;
            }, {
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
                delta: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                } | null;
            }>, "many">]>;
            references: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                object: z.ZodEnum<["chat.references"]>;
                chunks: z.ZodArray<z.ZodObject<{
                    text: z.ZodString;
                    title: z.ZodString;
                    page: z.ZodNumber;
                    file_name: z.ZodString;
                    file_path: z.ZodString;
                    document_id: z.ZodString;
                    chunk_id: z.ZodString;
                    metadata: z.ZodRecord<z.ZodString, z.ZodAny>;
                }, "strip", z.ZodTypeAny, {
                    file_path: string;
                    text: string;
                    title: string;
                    page: number;
                    file_name: string;
                    document_id: string;
                    chunk_id: string;
                    metadata: Record<string, any>;
                }, {
                    file_path: string;
                    text: string;
                    title: string;
                    page: number;
                    file_name: string;
                    document_id: string;
                    chunk_id: string;
                    metadata: Record<string, any>;
                }>, "many">;
                search_query: z.ZodString;
                finish_reason: z.ZodNullable<z.ZodEnum<["stop", "context_overflow"]>>;
            }, "strip", z.ZodTypeAny, {
                object: "chat.references";
                search_query: string;
                finish_reason: "stop" | "context_overflow" | null;
                chunks: {
                    file_path: string;
                    text: string;
                    title: string;
                    page: number;
                    file_name: string;
                    document_id: string;
                    chunk_id: string;
                    metadata: Record<string, any>;
                }[];
            }, {
                object: "chat.references";
                search_query: string;
                finish_reason: "stop" | "context_overflow" | null;
                chunks: {
                    file_path: string;
                    text: string;
                    title: string;
                    page: number;
                    file_name: string;
                    document_id: string;
                    chunk_id: string;
                    metadata: Record<string, any>;
                }[];
            }>>>;
        }, "strip", z.ZodTypeAny, {
            object: "chat.completion";
            id: string;
            model: string;
            created: number;
            choices: ({
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
            }[] | {
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
                delta: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                } | null;
            }[]) & ({
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
            }[] | {
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
                delta: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                } | null;
            }[] | undefined);
            usage?: {
                prompt_tokens: number | null;
                completion_tokens: number | null;
                total_tokens: number | null;
            } | null | undefined;
            references?: {
                object: "chat.references";
                search_query: string;
                finish_reason: "stop" | "context_overflow" | null;
                chunks: {
                    file_path: string;
                    text: string;
                    title: string;
                    page: number;
                    file_name: string;
                    document_id: string;
                    chunk_id: string;
                    metadata: Record<string, any>;
                }[];
            } | null | undefined;
        }, {
            object: "chat.completion";
            id: string;
            model: string;
            created: number;
            choices: ({
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
            }[] | {
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
                delta: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                } | null;
            }[]) & ({
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
            }[] | {
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
                delta: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                } | null;
            }[] | undefined);
            usage?: {
                prompt_tokens?: number | null | undefined;
                completion_tokens?: number | null | undefined;
                total_tokens?: number | null | undefined;
            } | null | undefined;
            references?: {
                object: "chat.references";
                search_query: string;
                finish_reason: "stop" | "context_overflow" | null;
                chunks: {
                    file_path: string;
                    text: string;
                    title: string;
                    page: number;
                    file_name: string;
                    document_id: string;
                    chunk_id: string;
                    metadata: Record<string, any>;
                }[];
            } | null | undefined;
        }>>;
        row_id: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        object: "gen_table.completion.chunks";
        columns: Record<string, {
            object: "chat.completion";
            id: string;
            model: string;
            created: number;
            choices: ({
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
            }[] | {
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
                delta: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                } | null;
            }[]) & ({
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
            }[] | {
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
                delta: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                } | null;
            }[] | undefined);
            usage?: {
                prompt_tokens: number | null;
                completion_tokens: number | null;
                total_tokens: number | null;
            } | null | undefined;
            references?: {
                object: "chat.references";
                search_query: string;
                finish_reason: "stop" | "context_overflow" | null;
                chunks: {
                    file_path: string;
                    text: string;
                    title: string;
                    page: number;
                    file_name: string;
                    document_id: string;
                    chunk_id: string;
                    metadata: Record<string, any>;
                }[];
            } | null | undefined;
        }>;
        row_id: string;
    }, {
        object: "gen_table.completion.chunks";
        columns: Record<string, {
            object: "chat.completion";
            id: string;
            model: string;
            created: number;
            choices: ({
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
            }[] | {
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
                delta: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                } | null;
            }[]) & ({
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
            }[] | {
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
                delta: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                } | null;
            }[] | undefined);
            usage?: {
                prompt_tokens?: number | null | undefined;
                completion_tokens?: number | null | undefined;
                total_tokens?: number | null | undefined;
            } | null | undefined;
            references?: {
                object: "chat.references";
                search_query: string;
                finish_reason: "stop" | "context_overflow" | null;
                chunks: {
                    file_path: string;
                    text: string;
                    title: string;
                    page: number;
                    file_name: string;
                    document_id: string;
                    chunk_id: string;
                    metadata: Record<string, any>;
                }[];
            } | null | undefined;
        }>;
        row_id: string;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    object: "gen_table.completion.rows";
    rows: {
        object: "gen_table.completion.chunks";
        columns: Record<string, {
            object: "chat.completion";
            id: string;
            model: string;
            created: number;
            choices: ({
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
            }[] | {
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
                delta: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                } | null;
            }[]) & ({
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
            }[] | {
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
                delta: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                } | null;
            }[] | undefined);
            usage?: {
                prompt_tokens: number | null;
                completion_tokens: number | null;
                total_tokens: number | null;
            } | null | undefined;
            references?: {
                object: "chat.references";
                search_query: string;
                finish_reason: "stop" | "context_overflow" | null;
                chunks: {
                    file_path: string;
                    text: string;
                    title: string;
                    page: number;
                    file_name: string;
                    document_id: string;
                    chunk_id: string;
                    metadata: Record<string, any>;
                }[];
            } | null | undefined;
        }>;
        row_id: string;
    }[];
}, {
    object: "gen_table.completion.rows";
    rows: {
        object: "gen_table.completion.chunks";
        columns: Record<string, {
            object: "chat.completion";
            id: string;
            model: string;
            created: number;
            choices: ({
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
            }[] | {
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
                delta: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                } | null;
            }[]) & ({
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
            }[] | {
                message: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                };
                index: number;
                finish_reason: string | null;
                delta: {
                    role: "function" | "system" | "user" | "assistant";
                    content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
                    name?: string | null | undefined;
                } | null;
            }[] | undefined);
            usage?: {
                prompt_tokens?: number | null | undefined;
                completion_tokens?: number | null | undefined;
                total_tokens?: number | null | undefined;
            } | null | undefined;
            references?: {
                object: "chat.references";
                search_query: string;
                finish_reason: "stop" | "context_overflow" | null;
                chunks: {
                    file_path: string;
                    text: string;
                    title: string;
                    page: number;
                    file_name: string;
                    document_id: string;
                    chunk_id: string;
                    metadata: Record<string, any>;
                }[];
            } | null | undefined;
        }>;
        row_id: string;
    }[];
}>;
export declare const GenTableStreamChatCompletionChunkSchema: z.ZodObject<{
    id: z.ZodString;
    model: z.ZodString;
    created: z.ZodNumber;
    usage: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        prompt_tokens: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodNumber>>>;
        completion_tokens: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodNumber>>>;
        total_tokens: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodNumber>>>;
    }, "strip", z.ZodTypeAny, {
        prompt_tokens: number | null;
        completion_tokens: number | null;
        total_tokens: number | null;
    }, {
        prompt_tokens?: number | null | undefined;
        completion_tokens?: number | null | undefined;
        total_tokens?: number | null | undefined;
    }>>>;
    choices: z.ZodUnion<[z.ZodArray<z.ZodObject<{
        message: z.ZodObject<{
            role: z.ZodEnum<["system", "user", "assistant", "function"]>;
            content: z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodRecord<z.ZodString, z.ZodString>]>>, "many">]>;
            name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        }, {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        }>;
        index: z.ZodNumber;
        finish_reason: z.ZodNullable<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
    }, {
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
    }>, "many">, z.ZodArray<z.ZodObject<{
        message: z.ZodObject<{
            role: z.ZodEnum<["system", "user", "assistant", "function"]>;
            content: z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodRecord<z.ZodString, z.ZodString>]>>, "many">]>;
            name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        }, {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        }>;
        index: z.ZodNumber;
        finish_reason: z.ZodNullable<z.ZodString>;
        delta: z.ZodNullable<z.ZodObject<{
            role: z.ZodEnum<["system", "user", "assistant", "function"]>;
            content: z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodRecord<z.ZodString, z.ZodString>]>>, "many">]>;
            name: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        }, {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
        delta: {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        } | null;
    }, {
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
        delta: {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        } | null;
    }>, "many">]>;
    references: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        object: z.ZodEnum<["chat.references"]>;
        chunks: z.ZodArray<z.ZodObject<{
            text: z.ZodString;
            title: z.ZodString;
            page: z.ZodNumber;
            file_name: z.ZodString;
            file_path: z.ZodString;
            document_id: z.ZodString;
            chunk_id: z.ZodString;
            metadata: z.ZodRecord<z.ZodString, z.ZodAny>;
        }, "strip", z.ZodTypeAny, {
            file_path: string;
            text: string;
            title: string;
            page: number;
            file_name: string;
            document_id: string;
            chunk_id: string;
            metadata: Record<string, any>;
        }, {
            file_path: string;
            text: string;
            title: string;
            page: number;
            file_name: string;
            document_id: string;
            chunk_id: string;
            metadata: Record<string, any>;
        }>, "many">;
        search_query: z.ZodString;
        finish_reason: z.ZodNullable<z.ZodEnum<["stop", "context_overflow"]>>;
    }, "strip", z.ZodTypeAny, {
        object: "chat.references";
        search_query: string;
        finish_reason: "stop" | "context_overflow" | null;
        chunks: {
            file_path: string;
            text: string;
            title: string;
            page: number;
            file_name: string;
            document_id: string;
            chunk_id: string;
            metadata: Record<string, any>;
        }[];
    }, {
        object: "chat.references";
        search_query: string;
        finish_reason: "stop" | "context_overflow" | null;
        chunks: {
            file_path: string;
            text: string;
            title: string;
            page: number;
            file_name: string;
            document_id: string;
            chunk_id: string;
            metadata: Record<string, any>;
        }[];
    }>>>;
    object: z.ZodEnum<["gen_table.completion.chunk"]>;
    output_column_name: z.ZodString;
    row_id: z.ZodString;
}, "strip", z.ZodTypeAny, {
    object: "gen_table.completion.chunk";
    id: string;
    model: string;
    created: number;
    choices: ({
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
    }[] | {
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
        delta: {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        } | null;
    }[]) & ({
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
    }[] | {
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
        delta: {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        } | null;
    }[] | undefined);
    row_id: string;
    output_column_name: string;
    usage?: {
        prompt_tokens: number | null;
        completion_tokens: number | null;
        total_tokens: number | null;
    } | null | undefined;
    references?: {
        object: "chat.references";
        search_query: string;
        finish_reason: "stop" | "context_overflow" | null;
        chunks: {
            file_path: string;
            text: string;
            title: string;
            page: number;
            file_name: string;
            document_id: string;
            chunk_id: string;
            metadata: Record<string, any>;
        }[];
    } | null | undefined;
}, {
    object: "gen_table.completion.chunk";
    id: string;
    model: string;
    created: number;
    choices: ({
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
    }[] | {
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
        delta: {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        } | null;
    }[]) & ({
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
    }[] | {
        message: {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        };
        index: number;
        finish_reason: string | null;
        delta: {
            role: "function" | "system" | "user" | "assistant";
            content: (string | Record<string, string | Record<string, string>>[]) & (string | Record<string, string | Record<string, string>>[] | undefined);
            name?: string | null | undefined;
        } | null;
    }[] | undefined);
    row_id: string;
    output_column_name: string;
    usage?: {
        prompt_tokens?: number | null | undefined;
        completion_tokens?: number | null | undefined;
        total_tokens?: number | null | undefined;
    } | null | undefined;
    references?: {
        object: "chat.references";
        search_query: string;
        finish_reason: "stop" | "context_overflow" | null;
        chunks: {
            file_path: string;
            text: string;
            title: string;
            page: number;
            file_name: string;
            document_id: string;
            chunk_id: string;
            metadata: Record<string, any>;
        }[];
    } | null | undefined;
}>;
export declare const GenTableStreamReferencesSchema: z.ZodObject<{
    search_query: z.ZodString;
    finish_reason: z.ZodNullable<z.ZodEnum<["stop", "context_overflow"]>>;
    chunks: z.ZodArray<z.ZodObject<{
        text: z.ZodString;
        title: z.ZodString;
        page: z.ZodNumber;
        file_name: z.ZodString;
        file_path: z.ZodString;
        document_id: z.ZodString;
        chunk_id: z.ZodString;
        metadata: z.ZodRecord<z.ZodString, z.ZodAny>;
    }, "strip", z.ZodTypeAny, {
        file_path: string;
        text: string;
        title: string;
        page: number;
        file_name: string;
        document_id: string;
        chunk_id: string;
        metadata: Record<string, any>;
    }, {
        file_path: string;
        text: string;
        title: string;
        page: number;
        file_name: string;
        document_id: string;
        chunk_id: string;
        metadata: Record<string, any>;
    }>, "many">;
    object: z.ZodEnum<["gen_table.references"]>;
    output_column_name: z.ZodString;
}, "strip", z.ZodTypeAny, {
    object: "gen_table.references";
    search_query: string;
    finish_reason: "stop" | "context_overflow" | null;
    chunks: {
        file_path: string;
        text: string;
        title: string;
        page: number;
        file_name: string;
        document_id: string;
        chunk_id: string;
        metadata: Record<string, any>;
    }[];
    output_column_name: string;
}, {
    object: "gen_table.references";
    search_query: string;
    finish_reason: "stop" | "context_overflow" | null;
    chunks: {
        file_path: string;
        text: string;
        title: string;
        page: number;
        file_name: string;
        document_id: string;
        chunk_id: string;
        metadata: Record<string, any>;
    }[];
    output_column_name: string;
}>;
export declare const CreateChatTableRequestSchema: z.ZodObject<{
    id: z.ZodString;
    cols: z.ZodArray<z.ZodObject<{
        index: z.ZodDefault<z.ZodBoolean>;
        vlen: z.ZodDefault<z.ZodNumber>;
        gen_config: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            object: z.ZodDefault<z.ZodLiteral<"gen_config.llm">>;
            model: z.ZodDefault<z.ZodString>;
            prompt: z.ZodDefault<z.ZodString>;
            system_prompt: z.ZodDefault<z.ZodString>;
            multi_turn: z.ZodDefault<z.ZodBoolean>;
            rag_params: z.ZodDefault<z.ZodNullable<z.ZodObject<{
                search_query: z.ZodOptional<z.ZodString>;
                k: z.ZodOptional<z.ZodNumber>;
                fetch_k: z.ZodOptional<z.ZodNumber>;
                document_ids: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                rank_profile: z.ZodOptional<z.ZodEnum<["bm25", "semantic", "hybrid", "hybrid_log"]>>;
                rerank: z.ZodOptional<z.ZodBoolean>;
                concat_reranker_input: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            }, {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            }>>>;
            temperature: z.ZodDefault<z.ZodNumber>;
            top_p: z.ZodDefault<z.ZodNumber>;
            stop: z.ZodDefault<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            max_tokens: z.ZodDefault<z.ZodNumber>;
            presence_penalty: z.ZodDefault<z.ZodNumber>;
            frequency_penalty: z.ZodDefault<z.ZodNumber>;
            logit_bias: z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodAny>>;
        }, "strip", z.ZodTypeAny, {
            object: "gen_config.llm";
            model: string;
            rag_params: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null;
            temperature: number;
            top_p: number;
            stop: string[] | null;
            max_tokens: number;
            presence_penalty: number;
            frequency_penalty: number;
            logit_bias: Record<string, any>;
            prompt: string;
            system_prompt: string;
            multi_turn: boolean;
        }, {
            object?: "gen_config.llm" | undefined;
            model?: string | undefined;
            prompt?: string | undefined;
            system_prompt?: string | undefined;
            multi_turn?: boolean | undefined;
            rag_params?: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null | undefined;
            temperature?: number | undefined;
            top_p?: number | undefined;
            stop?: string[] | null | undefined;
            max_tokens?: number | undefined;
            presence_penalty?: number | undefined;
            frequency_penalty?: number | undefined;
            logit_bias?: Record<string, any> | undefined;
        }>, z.ZodObject<{
            object: z.ZodDefault<z.ZodLiteral<"gen_config.embed">>;
            embedding_model: z.ZodString;
            source_column: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            object: "gen_config.embed";
            embedding_model: string;
            source_column: string;
        }, {
            embedding_model: string;
            source_column: string;
            object?: "gen_config.embed" | undefined;
        }>, z.ZodObject<{
            object: z.ZodDefault<z.ZodLiteral<"gen_config.code">>;
            source_column: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            object: "gen_config.code";
            source_column: string;
        }, {
            source_column: string;
            object?: "gen_config.code" | undefined;
        }>, z.ZodNull]>>;
        id: z.ZodString;
        dtype: z.ZodDefault<z.ZodEnum<["int", "float", "str", "bool", "image", "audio"]>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        index: boolean;
        dtype: "float" | "int" | "str" | "bool" | "image" | "audio";
        vlen: number;
        gen_config?: {
            object: "gen_config.embed";
            embedding_model: string;
            source_column: string;
        } | {
            object: "gen_config.llm";
            model: string;
            rag_params: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null;
            temperature: number;
            top_p: number;
            stop: string[] | null;
            max_tokens: number;
            presence_penalty: number;
            frequency_penalty: number;
            logit_bias: Record<string, any>;
            prompt: string;
            system_prompt: string;
            multi_turn: boolean;
        } | {
            object: "gen_config.code";
            source_column: string;
        } | null | undefined;
    }, {
        id: string;
        index?: boolean | undefined;
        vlen?: number | undefined;
        gen_config?: {
            embedding_model: string;
            source_column: string;
            object?: "gen_config.embed" | undefined;
        } | {
            object?: "gen_config.llm" | undefined;
            model?: string | undefined;
            prompt?: string | undefined;
            system_prompt?: string | undefined;
            multi_turn?: boolean | undefined;
            rag_params?: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null | undefined;
            temperature?: number | undefined;
            top_p?: number | undefined;
            stop?: string[] | null | undefined;
            max_tokens?: number | undefined;
            presence_penalty?: number | undefined;
            frequency_penalty?: number | undefined;
            logit_bias?: Record<string, any> | undefined;
        } | {
            source_column: string;
            object?: "gen_config.code" | undefined;
        } | null | undefined;
        dtype?: "float" | "int" | "str" | "bool" | "image" | "audio" | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    id: string;
    cols: {
        id: string;
        index: boolean;
        dtype: "float" | "int" | "str" | "bool" | "image" | "audio";
        vlen: number;
        gen_config?: {
            object: "gen_config.embed";
            embedding_model: string;
            source_column: string;
        } | {
            object: "gen_config.llm";
            model: string;
            rag_params: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null;
            temperature: number;
            top_p: number;
            stop: string[] | null;
            max_tokens: number;
            presence_penalty: number;
            frequency_penalty: number;
            logit_bias: Record<string, any>;
            prompt: string;
            system_prompt: string;
            multi_turn: boolean;
        } | {
            object: "gen_config.code";
            source_column: string;
        } | null | undefined;
    }[];
}, {
    id: string;
    cols: {
        id: string;
        index?: boolean | undefined;
        vlen?: number | undefined;
        gen_config?: {
            embedding_model: string;
            source_column: string;
            object?: "gen_config.embed" | undefined;
        } | {
            object?: "gen_config.llm" | undefined;
            model?: string | undefined;
            prompt?: string | undefined;
            system_prompt?: string | undefined;
            multi_turn?: boolean | undefined;
            rag_params?: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null | undefined;
            temperature?: number | undefined;
            top_p?: number | undefined;
            stop?: string[] | null | undefined;
            max_tokens?: number | undefined;
            presence_penalty?: number | undefined;
            frequency_penalty?: number | undefined;
            logit_bias?: Record<string, any> | undefined;
        } | {
            source_column: string;
            object?: "gen_config.code" | undefined;
        } | null | undefined;
        dtype?: "float" | "int" | "str" | "bool" | "image" | "audio" | undefined;
    }[];
}>;
export type CreateChatTableRequest = z.input<typeof CreateChatTableRequestSchema>;
export type GetConversationThreadRequest = z.input<typeof GetConversationThreadRequestSchema>;
export type GetConversationThreadResponse = z.infer<typeof GetConversationThreadResponseSchema>;
export type GenTableChatCompletionChunks = z.infer<typeof GenTableChatCompletionChunksSchema>;
export type GenTableRowsChatCompletionChunks = z.infer<typeof GenTableRowsChatCompletionChunksSchema>;
export type GenTableStreamChatCompletionChunk = z.infer<typeof GenTableStreamChatCompletionChunkSchema>;
export type GenTableStreamReferences = z.infer<typeof GenTableStreamReferencesSchema>;
