import { z } from "zod";
export declare const CreateActionTableRequestSchema: z.ZodObject<{
    id: z.ZodString;
    cols: z.ZodArray<z.ZodObject<{
        index: z.ZodDefault<z.ZodBoolean>;
        vlen: z.ZodDefault<z.ZodNumber>;
        gen_config: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            object: z.ZodDefault<z.ZodLiteral<"gen_config.llm">>;
            model: z.ZodDefault<z.ZodString>;
            prompt: z.ZodDefault<z.ZodString>;
            system_prompt: z.ZodDefault<z.ZodString>;
            multi_turn: z.ZodDefault<z.ZodBoolean>;
            rag_params: z.ZodDefault<z.ZodNullable<z.ZodObject<{
                search_query: z.ZodOptional<z.ZodString>;
                k: z.ZodOptional<z.ZodNumber>;
                fetch_k: z.ZodOptional<z.ZodNumber>;
                document_ids: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                rank_profile: z.ZodOptional<z.ZodEnum<["bm25", "semantic", "hybrid", "hybrid_log"]>>;
                rerank: z.ZodOptional<z.ZodBoolean>;
                concat_reranker_input: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            }, {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            }>>>;
            temperature: z.ZodDefault<z.ZodNumber>;
            top_p: z.ZodDefault<z.ZodNumber>;
            stop: z.ZodDefault<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            max_tokens: z.ZodDefault<z.ZodNumber>;
            presence_penalty: z.ZodDefault<z.ZodNumber>;
            frequency_penalty: z.ZodDefault<z.ZodNumber>;
            logit_bias: z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodAny>>;
        }, "strip", z.ZodTypeAny, {
            object: "gen_config.llm";
            model: string;
            rag_params: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null;
            temperature: number;
            top_p: number;
            stop: string[] | null;
            max_tokens: number;
            presence_penalty: number;
            frequency_penalty: number;
            logit_bias: Record<string, any>;
            prompt: string;
            system_prompt: string;
            multi_turn: boolean;
        }, {
            object?: "gen_config.llm" | undefined;
            model?: string | undefined;
            prompt?: string | undefined;
            system_prompt?: string | undefined;
            multi_turn?: boolean | undefined;
            rag_params?: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null | undefined;
            temperature?: number | undefined;
            top_p?: number | undefined;
            stop?: string[] | null | undefined;
            max_tokens?: number | undefined;
            presence_penalty?: number | undefined;
            frequency_penalty?: number | undefined;
            logit_bias?: Record<string, any> | undefined;
        }>, z.ZodObject<{
            object: z.ZodDefault<z.ZodLiteral<"gen_config.embed">>;
            embedding_model: z.ZodString;
            source_column: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            object: "gen_config.embed";
            embedding_model: string;
            source_column: string;
        }, {
            embedding_model: string;
            source_column: string;
            object?: "gen_config.embed" | undefined;
        }>, z.ZodObject<{
            object: z.ZodDefault<z.ZodLiteral<"gen_config.code">>;
            source_column: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            object: "gen_config.code";
            source_column: string;
        }, {
            source_column: string;
            object?: "gen_config.code" | undefined;
        }>, z.ZodNull]>>;
        id: z.ZodString;
        dtype: z.ZodDefault<z.ZodEnum<["int", "float", "str", "bool", "image", "audio"]>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        index: boolean;
        dtype: "float" | "int" | "str" | "bool" | "image" | "audio";
        vlen: number;
        gen_config?: {
            object: "gen_config.embed";
            embedding_model: string;
            source_column: string;
        } | {
            object: "gen_config.llm";
            model: string;
            rag_params: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null;
            temperature: number;
            top_p: number;
            stop: string[] | null;
            max_tokens: number;
            presence_penalty: number;
            frequency_penalty: number;
            logit_bias: Record<string, any>;
            prompt: string;
            system_prompt: string;
            multi_turn: boolean;
        } | {
            object: "gen_config.code";
            source_column: string;
        } | null | undefined;
    }, {
        id: string;
        index?: boolean | undefined;
        vlen?: number | undefined;
        gen_config?: {
            embedding_model: string;
            source_column: string;
            object?: "gen_config.embed" | undefined;
        } | {
            object?: "gen_config.llm" | undefined;
            model?: string | undefined;
            prompt?: string | undefined;
            system_prompt?: string | undefined;
            multi_turn?: boolean | undefined;
            rag_params?: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null | undefined;
            temperature?: number | undefined;
            top_p?: number | undefined;
            stop?: string[] | null | undefined;
            max_tokens?: number | undefined;
            presence_penalty?: number | undefined;
            frequency_penalty?: number | undefined;
            logit_bias?: Record<string, any> | undefined;
        } | {
            source_column: string;
            object?: "gen_config.code" | undefined;
        } | null | undefined;
        dtype?: "float" | "int" | "str" | "bool" | "image" | "audio" | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    id: string;
    cols: {
        id: string;
        index: boolean;
        dtype: "float" | "int" | "str" | "bool" | "image" | "audio";
        vlen: number;
        gen_config?: {
            object: "gen_config.embed";
            embedding_model: string;
            source_column: string;
        } | {
            object: "gen_config.llm";
            model: string;
            rag_params: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null;
            temperature: number;
            top_p: number;
            stop: string[] | null;
            max_tokens: number;
            presence_penalty: number;
            frequency_penalty: number;
            logit_bias: Record<string, any>;
            prompt: string;
            system_prompt: string;
            multi_turn: boolean;
        } | {
            object: "gen_config.code";
            source_column: string;
        } | null | undefined;
    }[];
}, {
    id: string;
    cols: {
        id: string;
        index?: boolean | undefined;
        vlen?: number | undefined;
        gen_config?: {
            embedding_model: string;
            source_column: string;
            object?: "gen_config.embed" | undefined;
        } | {
            object?: "gen_config.llm" | undefined;
            model?: string | undefined;
            prompt?: string | undefined;
            system_prompt?: string | undefined;
            multi_turn?: boolean | undefined;
            rag_params?: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null | undefined;
            temperature?: number | undefined;
            top_p?: number | undefined;
            stop?: string[] | null | undefined;
            max_tokens?: number | undefined;
            presence_penalty?: number | undefined;
            frequency_penalty?: number | undefined;
            logit_bias?: Record<string, any> | undefined;
        } | {
            source_column: string;
            object?: "gen_config.code" | undefined;
        } | null | undefined;
        dtype?: "float" | "int" | "str" | "bool" | "image" | "audio" | undefined;
    }[];
}>;
export declare const AddActionColumnRequestSchema: z.ZodObject<{
    id: z.ZodString;
    cols: z.ZodArray<z.ZodObject<{
        index: z.ZodDefault<z.ZodBoolean>;
        vlen: z.ZodDefault<z.ZodNumber>;
        gen_config: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            object: z.ZodDefault<z.ZodLiteral<"gen_config.llm">>;
            model: z.ZodDefault<z.ZodString>;
            prompt: z.ZodDefault<z.ZodString>;
            system_prompt: z.ZodDefault<z.ZodString>;
            multi_turn: z.ZodDefault<z.ZodBoolean>;
            rag_params: z.ZodDefault<z.ZodNullable<z.ZodObject<{
                search_query: z.ZodOptional<z.ZodString>;
                k: z.ZodOptional<z.ZodNumber>;
                fetch_k: z.ZodOptional<z.ZodNumber>;
                document_ids: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                rank_profile: z.ZodOptional<z.ZodEnum<["bm25", "semantic", "hybrid", "hybrid_log"]>>;
                rerank: z.ZodOptional<z.ZodBoolean>;
                concat_reranker_input: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            }, {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            }>>>;
            temperature: z.ZodDefault<z.ZodNumber>;
            top_p: z.ZodDefault<z.ZodNumber>;
            stop: z.ZodDefault<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            max_tokens: z.ZodDefault<z.ZodNumber>;
            presence_penalty: z.ZodDefault<z.ZodNumber>;
            frequency_penalty: z.ZodDefault<z.ZodNumber>;
            logit_bias: z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodAny>>;
        }, "strip", z.ZodTypeAny, {
            object: "gen_config.llm";
            model: string;
            rag_params: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null;
            temperature: number;
            top_p: number;
            stop: string[] | null;
            max_tokens: number;
            presence_penalty: number;
            frequency_penalty: number;
            logit_bias: Record<string, any>;
            prompt: string;
            system_prompt: string;
            multi_turn: boolean;
        }, {
            object?: "gen_config.llm" | undefined;
            model?: string | undefined;
            prompt?: string | undefined;
            system_prompt?: string | undefined;
            multi_turn?: boolean | undefined;
            rag_params?: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null | undefined;
            temperature?: number | undefined;
            top_p?: number | undefined;
            stop?: string[] | null | undefined;
            max_tokens?: number | undefined;
            presence_penalty?: number | undefined;
            frequency_penalty?: number | undefined;
            logit_bias?: Record<string, any> | undefined;
        }>, z.ZodObject<{
            object: z.ZodDefault<z.ZodLiteral<"gen_config.embed">>;
            embedding_model: z.ZodString;
            source_column: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            object: "gen_config.embed";
            embedding_model: string;
            source_column: string;
        }, {
            embedding_model: string;
            source_column: string;
            object?: "gen_config.embed" | undefined;
        }>, z.ZodObject<{
            object: z.ZodDefault<z.ZodLiteral<"gen_config.code">>;
            source_column: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            object: "gen_config.code";
            source_column: string;
        }, {
            source_column: string;
            object?: "gen_config.code" | undefined;
        }>, z.ZodNull]>>;
        id: z.ZodString;
        dtype: z.ZodDefault<z.ZodEnum<["int", "float", "str", "bool", "image", "audio"]>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        index: boolean;
        dtype: "float" | "int" | "str" | "bool" | "image" | "audio";
        vlen: number;
        gen_config?: {
            object: "gen_config.embed";
            embedding_model: string;
            source_column: string;
        } | {
            object: "gen_config.llm";
            model: string;
            rag_params: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null;
            temperature: number;
            top_p: number;
            stop: string[] | null;
            max_tokens: number;
            presence_penalty: number;
            frequency_penalty: number;
            logit_bias: Record<string, any>;
            prompt: string;
            system_prompt: string;
            multi_turn: boolean;
        } | {
            object: "gen_config.code";
            source_column: string;
        } | null | undefined;
    }, {
        id: string;
        index?: boolean | undefined;
        vlen?: number | undefined;
        gen_config?: {
            embedding_model: string;
            source_column: string;
            object?: "gen_config.embed" | undefined;
        } | {
            object?: "gen_config.llm" | undefined;
            model?: string | undefined;
            prompt?: string | undefined;
            system_prompt?: string | undefined;
            multi_turn?: boolean | undefined;
            rag_params?: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null | undefined;
            temperature?: number | undefined;
            top_p?: number | undefined;
            stop?: string[] | null | undefined;
            max_tokens?: number | undefined;
            presence_penalty?: number | undefined;
            frequency_penalty?: number | undefined;
            logit_bias?: Record<string, any> | undefined;
        } | {
            source_column: string;
            object?: "gen_config.code" | undefined;
        } | null | undefined;
        dtype?: "float" | "int" | "str" | "bool" | "image" | "audio" | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    id: string;
    cols: {
        id: string;
        index: boolean;
        dtype: "float" | "int" | "str" | "bool" | "image" | "audio";
        vlen: number;
        gen_config?: {
            object: "gen_config.embed";
            embedding_model: string;
            source_column: string;
        } | {
            object: "gen_config.llm";
            model: string;
            rag_params: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null;
            temperature: number;
            top_p: number;
            stop: string[] | null;
            max_tokens: number;
            presence_penalty: number;
            frequency_penalty: number;
            logit_bias: Record<string, any>;
            prompt: string;
            system_prompt: string;
            multi_turn: boolean;
        } | {
            object: "gen_config.code";
            source_column: string;
        } | null | undefined;
    }[];
}, {
    id: string;
    cols: {
        id: string;
        index?: boolean | undefined;
        vlen?: number | undefined;
        gen_config?: {
            embedding_model: string;
            source_column: string;
            object?: "gen_config.embed" | undefined;
        } | {
            object?: "gen_config.llm" | undefined;
            model?: string | undefined;
            prompt?: string | undefined;
            system_prompt?: string | undefined;
            multi_turn?: boolean | undefined;
            rag_params?: {
                search_query?: string | undefined;
                k?: number | undefined;
                fetch_k?: number | undefined;
                document_ids?: string[] | undefined;
                rank_profile?: "bm25" | "semantic" | "hybrid" | "hybrid_log" | undefined;
                rerank?: boolean | undefined;
                concat_reranker_input?: boolean | undefined;
            } | null | undefined;
            temperature?: number | undefined;
            top_p?: number | undefined;
            stop?: string[] | null | undefined;
            max_tokens?: number | undefined;
            presence_penalty?: number | undefined;
            frequency_penalty?: number | undefined;
            logit_bias?: Record<string, any> | undefined;
        } | {
            source_column: string;
            object?: "gen_config.code" | undefined;
        } | null | undefined;
        dtype?: "float" | "int" | "str" | "bool" | "image" | "audio" | undefined;
    }[];
}>;
export type CreateActionTableRequest = z.input<typeof CreateActionTableRequestSchema>;
export type AddActionColumnRequest = z.input<typeof AddActionColumnRequestSchema>;
