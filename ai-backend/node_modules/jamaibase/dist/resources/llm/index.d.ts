import { Base } from "../../resources/base";
import { ChatCompletionChunk, ChatRequest, References, StreamChatCompletionChunk } from "../../resources/llm/chat";
import { EmbeddingRequestSchema, EmbeddingResponse } from "../../resources/llm/embedding";
import { ModelInfoRequest, ModelInfoResponse, ModelNamesRequest, ModelNamesResponse } from "../../resources/llm/model";
import { z } from "zod";
export declare class LLM extends Base {
    private handleChatStreamResponse;
    modelInfo(params?: ModelInfoRequest): Promise<ModelInfoResponse>;
    modelNames(params?: ModelNamesRequest): Promise<ModelNamesResponse>;
    generateChatCompletionsStream(params: ChatRequest): Promise<ReadableStream<StreamChatCompletionChunk | References>>;
    generateChatCompletions(params: ChatRequest): Promise<ChatCompletionChunk>;
    generateEmbeddings(params: z.input<typeof EmbeddingRequestSchema>): Promise<EmbeddingResponse>;
}
