import { z } from "zod";
export declare const UploadFileRequestSchema: z.ZodObject<{
    file: z.ZodOptional<z.ZodAny>;
    file_path: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    file?: any;
    file_path?: string | undefined;
}, {
    file?: any;
    file_path?: string | undefined;
}>;
export declare const UploadFileResponseSchema: z.ZodObject<{
    object: z.ZodLiteral<"file.upload">;
    uri: z.ZodString;
}, "strip", z.ZodTypeAny, {
    object: "file.upload";
    uri: string;
}, {
    object: "file.upload";
    uri: string;
}>;
export declare const GetUrlRequestSchema: z.ZodObject<{
    uris: z.ZodArray<z.ZodString, "many">;
}, "strip", z.ZodTypeAny, {
    uris: string[];
}, {
    uris: string[];
}>;
export declare const GetUrlResponseSchema: z.ZodObject<{
    object: z.ZodLiteral<"file.urls">;
    urls: z.ZodArray<z.ZodString, "many">;
}, "strip", z.ZodTypeAny, {
    object: "file.urls";
    urls: string[];
}, {
    object: "file.urls";
    urls: string[];
}>;
export type IUploadFileRequest = z.input<typeof UploadFileRequestSchema>;
export type IUploadFileResponse = z.infer<typeof UploadFileResponseSchema>;
export type IGetUrlRequest = z.input<typeof GetUrlRequestSchema>;
export type IGetUrlResponse = z.infer<typeof GetUrlResponseSchema>;
